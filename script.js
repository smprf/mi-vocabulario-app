// Повертаємо всі змінні
const dashboardScreen = document.getElementById('dashboard-screen'), learningScreen = document.getElementById('learning-screen'), summaryScreen = document.getElementById('summary-screen'), testScreen = document.getElementById('test-screen'), testResultsScreen = document.getElementById('test-results-screen'), dictionaryScreen = document.getElementById('dictionary-screen'), profileScreen = document.getElementById('profile-screen'), topicInput = document.getElementById('topic-input'), generateTopicBtn = document.getElementById('generate-topic-btn'), loadingIndicator = document.getElementById('loading-indicator'), userTopicsList = document.getElementById('user-topics-list'), showTranslationBtn = document.getElementById('show-translation-btn'), nextWordBtn = document.getElementById('next-word-btn'), startTestBtn = document.getElementById('start-test-btn'), navDashboard = document.getElementById('nav-dashboard'), navDictionary = document.getElementById('nav-dictionary'), navProfile = document.getElementById('nav-profile'), learningTopicTitle = document.getElementById('learning-topic-title'), wordEl = document.querySelector('.flashcard .word'), translationEl = document.querySelector('.flashcard .translation'), examplesListEl = document.querySelector('.flashcard .examples'), cardFront = document.querySelector('.card-front'), cardBack = document.querySelector('.card-back'), summaryTopicTitle = document.getElementById('summary-topic-title'), summaryTableBody = document.getElementById('summary-table-body'), dictionarySearch = document.getElementById('dictionary-search'), dictionaryContent = document.getElementById('dictionary-content'), testTopicTitle = document.getElementById('test-topic-title'), testProgress = document.getElementById('test-progress'), testWord = document.getElementById('test-word'), testOptions = document.getElementById('test-options'), testScoreEl = document.getElementById('test-score'), testFeedbackEl = document.getElementById('test-feedback'), backToDashboardBtn = document.getElementById('back-to-dashboard-btn'), statsTopicsCompleted = document.getElementById('stats-topics-completed'), statsWordsLearned = document.getElementById('stats-words-learned'), statsAverageScore = document.getElementById('stats-average-score'), achievementsList = document.getElementById('achievements-list');
let currentTopicData = null, currentWordIndex = 0, userTopics = [], personalDictionary = {}, testQuestions = [], currentTestQuestionIndex = 0, score = 0;
function saveProgress() { localStorage.setItem('userTopics', JSON.stringify(userTopics)); localStorage.setItem('personalDictionary', JSON.stringify(personalDictionary)); }
function loadProgress() { const savedTopics = localStorage.getItem('userTopics'); if (savedTopics) { userTopics = JSON.parse(savedTopics); } const savedDictionary = localStorage.getItem('personalDictionary'); if (savedDictionary) { personalDictionary = JSON.parse(savedDictionary); } }

// !!! ПОВЕРТАЄМО СПРАВЖНІЙ ЗАПИТ ДО СЕРВЕРА !!!
function fetchTopicFromServer(topicName) {
    const serverUrl = 'https://mi-vocabulario-server.onrender.com/generate-topic';
    console.log(`Відправляю запит на локальний сервер (${serverUrl}) для теми: "${topicName}"`);

    return fetch(serverUrl, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ topic: topicName }),
    })
    .then(async response => {
        if (!response.ok) {
            const errorData = await response.json();
            throw new Error(errorData.error || `Сервер повернув статус ${response.status}`);
        }
        return response.json();
    });
}

// Весь інший код залишається таким же, як у попередній робочій версії
function calculateAndDisplayStats() { const completedTopics = userTopics.filter(t => t.score !== undefined); statsTopicsCompleted.textContent = completedTopics.length; let wordsLearned = 0; for (const topic in personalDictionary) { wordsLearned += personalDictionary[topic].length; } statsWordsLearned.textContent = wordsLearned; if (completedTopics.length > 0) { const totalScore = completedTopics.reduce((sum, t) => sum + t.score, 0); const totalQuestions = completedTopics.reduce((sum, t) => sum + t.totalQuestions, 0); const averagePercentage = totalQuestions > 0 ? Math.round((totalScore / totalQuestions) * 100) : 0; statsAverageScore.textContent = `${averagePercentage}%`; } else { statsAverageScore.textContent = '0%'; } }
function checkAndDisplayAchievements() { const wordsLearned = parseInt(statsWordsLearned.textContent); const completedTopicsCount = parseInt(statsTopicsCompleted.textContent); if (completedTopicsCount >= 1) document.getElementById('ach-first-step').classList.add('unlocked'); if (wordsLearned >= 50) document.getElementById('ach-word-master').classList.add('unlocked'); if (Object.keys(personalDictionary).length >= 3) document.getElementById('ach-explorer').classList.add('unlocked'); const hasPerfectScore = userTopics.some(t => t.score === t.totalQuestions && t.totalQuestions > 0); if (hasPerfectScore) document.getElementById('ach-excellent').classList.add('unlocked'); }
function renderProfile() { calculateAndDisplayStats(); checkAndDisplayAchievements(); }
function shuffleArray(array) { for (let i = array.length - 1; i > 0; i--) { const j = Math.floor(Math.random() * (i + 1));[array[i], array[j]] = [array[j], array[i]]; } }
function generateTest(topicData) { testQuestions = []; const allWords = [...topicData.words]; shuffleArray(allWords); const selectedWords = allWords.slice(0, Math.min(10, allWords.length)); for (const wordData of selectedWords) { const correctAnswer = wordData.translation; const options = [correctAnswer]; const distractors = allWords.filter(w => w.translation !== correctAnswer).map(w => w.translation); shuffleArray(distractors); for (let i = 0; i < 3; i++) { if (distractors[i] && options.length < 4) options.push(distractors[i]); } shuffleArray(options); testQuestions.push({ word: wordData.word, options, correctAnswer }); } }
function displayTestQuestion() { const question = testQuestions[currentTestQuestionIndex]; testTopicTitle.textContent = `Тест: ${currentTopicData.topicData.topic}`; testProgress.textContent = `Запитання ${currentTestQuestionIndex + 1} / ${testQuestions.length}`; testWord.textContent = question.word; testOptions.innerHTML = ''; question.options.forEach(option => { const button = document.createElement('button'); button.textContent = option; button.addEventListener('click', handleAnswer); testOptions.appendChild(button); }); }
function handleAnswer(event) { const selectedAnswer = event.target.textContent; const question = testQuestions[currentTestQuestionIndex]; Array.from(testOptions.children).forEach(btn => { btn.classList.add('disabled'); if (btn.textContent === question.correctAnswer) btn.classList.add('correct'); }); if (selectedAnswer === question.correctAnswer) { score++; } else { event.target.classList.add('incorrect'); } setTimeout(nextTestQuestion, 1500); }
function nextTestQuestion() { currentTestQuestionIndex++; if (currentTestQuestionIndex < testQuestions.length) { displayTestQuestion(); } else { showTestResults(); } }
function showTestResults() { const topicIndex = userTopics.findIndex(t => t.topicData.topic === currentTopicData.topicData.topic); if (topicIndex !== -1) { userTopics[topicIndex].score = score; userTopics[topicIndex].totalQuestions = testQuestions.length; } testScoreEl.textContent = `Ваш результат: ${score} / ${testQuestions.length}`; const percentage = (score / testQuestions.length) * 100 || 0; let feedback = "Непогано, але варто повторити цю тему ще раз."; if (percentage === 100) feedback = "Чудово! Бездоганний результат!"; else if (percentage >= 70) feedback = "Дуже добре! Продовжуйте в тому ж дусі."; testFeedbackEl.textContent = feedback; saveProgress(); renderProfile(); showScreen('test-results-screen'); }
function startTest() { addTopicToDictionary(currentTopicData.topicData); generateTest(currentTopicData.topicData); currentTestQuestionIndex = 0; score = 0; displayTestQuestion(); showScreen('test-screen'); }
function showScreen(screenId) { [dashboardScreen, learningScreen, summaryScreen, testScreen, testResultsScreen, dictionaryScreen, profileScreen].forEach(screen => { if(screen) screen.style.display = 'none'; }); const screenToShow = document.getElementById(screenId); if (screenToShow) screenToShow.style.display = 'block'; }
function updateUserTopicsList() { if (!userTopicsList) return; userTopicsList.innerHTML = ''; if (userTopics.length === 0) { userTopicsList.innerHTML = '<li>Ви ще не створили жодного уроку.</li>'; return; } userTopics.forEach(topic => { const li = document.createElement('li'); let content = ''; if (topic.score !== undefined) { content = `<span>${topic.topicData.topic} | <b>Результат: ${topic.score}/${topic.totalQuestions}</b></span><button class="retake-test-btn" data-topic-name="${topic.topicData.topic}">Перездати</button>`; } else { content = `<span>${topic.topicData.topic} (не завершено)</span><button class="start-lesson-btn" data-topic-name="${topic.topicData.topic}">Продовжити</button>`; } li.innerHTML = content; userTopicsList.appendChild(li); }); document.querySelectorAll('.start-lesson-btn, .retake-test-btn').forEach(button => { button.addEventListener('click', (event) => { const topicName = event.target.getAttribute('data-topic-name'); const topicData = userTopics.find(t => t.topicData.topic === topicName); if (topicData) { currentTopicData = topicData; if (event.target.classList.contains('retake-test-btn')) startTest(); else startLearningTopic(topicData); } }); }); }
function startLearningTopic(topicData) { currentTopicData = topicData; currentWordIndex = 0; displayCurrentWord(); showScreen('learning-screen'); }
function displayCurrentWord() { if (!currentTopicData || !currentTopicData.topicData.words) return; const wordData = currentTopicData.topicData.words[currentWordIndex]; learningTopicTitle.textContent = `Тема: ${currentTopicData.topicData.topic} (${currentWordIndex + 1}/${currentTopicData.topicData.words.length})`; wordEl.textContent = wordData.word; translationEl.textContent = wordData.translation; examplesListEl.innerHTML = ''; if (wordData.examples && Array.isArray(wordData.examples)) { wordData.examples.forEach(example => { const li = document.createElement('li'); li.innerHTML = `<p class="example-spa">${example.spa}</p><p class="example-ukr">${example.ukr}</p>`; examplesListEl.appendChild(li); }); } cardFront.style.display = 'block'; cardBack.style.display = 'none'; showTranslationBtn.style.display = 'block'; nextWordBtn.style.display = 'none'; }
function generateSummaryTable() { if (!currentTopicData) return; summaryTopicTitle.textContent = currentTopicData.topicData.topic; summaryTableBody.innerHTML = ''; currentTopicData.topicData.words.forEach(wordData => { const row = document.createElement('tr'); const examplesHtml = (wordData.examples && Array.isArray(wordData.examples)) ? wordData.examples.map(ex => `<p class="example-spa">${ex.spa}</p><p class="example-ukr">${ex.ukr}</p>`).join('<hr style="margin: 5px 0; border: none; border-top: 1px solid #eee;">') : 'Прикладів немає'; row.innerHTML = `<td>${wordData.word}</td><td>${wordData.translation}</td><td>${examplesHtml}</td>`; summaryTableBody.appendChild(row); }); }
function showNextWord() { currentWordIndex++; if (currentWordIndex < currentTopicData.topicData.words.length) { displayCurrentWord(); } else { generateSummaryTable(); showScreen('summary-screen'); } }
function addTopicToDictionary(topicData) { const { topic, words } = topicData; if (!personalDictionary[topic]) { personalDictionary[topic] = words; saveProgress(); } }
function renderDictionary() { dictionaryContent.innerHTML = ''; if (Object.keys(personalDictionary).length === 0) { dictionaryContent.innerHTML = '<p>Ваш словник поки що порожній. Пройдіть урок, щоб додати сюди слова!</p>'; return; } for (const topic in personalDictionary) { const words = personalDictionary[topic]; const themeSection = document.createElement('div'); themeSection.className = 'dictionary-theme-section'; const title = document.createElement('h3'); title.textContent = topic; themeSection.appendChild(title); const list = document.createElement('ul'); words.forEach(wordData => { const listItem = document.createElement('li'); listItem.innerHTML = `<strong>${wordData.word}</strong> - ${wordData.translation}`; list.appendChild(listItem); }); themeSection.appendChild(list); dictionaryContent.appendChild(themeSection); } }
function filterDictionary() { const searchTerm = dictionarySearch.value.toLowerCase(); document.querySelectorAll('.dictionary-theme-section').forEach(section => { let hasVisibleWords = false; section.querySelectorAll('li').forEach(li => { const wordText = li.textContent.toLowerCase(); if (wordText.includes(searchTerm)) { li.style.display = 'list-item'; hasVisibleWords = true; } else { li.style.display = 'none'; } }); section.style.display = hasVisibleWords ? 'block' : 'none'; }); }
navDashboard.addEventListener('click', (e) => { e.preventDefault(); showScreen('dashboard-screen'); });
navDictionary.addEventListener('click', (e) => { e.preventDefault(); renderDictionary(); showScreen('dictionary-screen'); });
navProfile.addEventListener('click', (e) => { e.preventDefault(); renderProfile(); showScreen('profile-screen'); });
dictionarySearch.addEventListener('input', filterDictionary);
generateTopicBtn.addEventListener('click', () => { const requestedTopic = topicInput.value.trim(); if (!requestedTopic) { alert("Будь ласка, введіть назву теми."); return; } loadingIndicator.style.display = 'block'; generateTopicBtn.disabled = true; generateTopicBtn.textContent = 'Завантаження...'; fetchTopicFromServer(requestedTopic).then(topicData => { const newTopicData = { topicData: topicData, score: undefined, totalQuestions: undefined }; if (!userTopics.some(t => t.topicData.topic === newTopicData.topicData.topic)) { userTopics.push(newTopicData); saveProgress(); updateUserTopicsList(); startLearningTopic(newTopicData); } else { alert(`Тема "${newTopicData.topicData.topic}" вже є у вашому списку.`); const existingTopic = userTopics.find(t => t.topicData.topic === newTopicData.topicData.topic); startLearningTopic(existingTopic); } }).catch(error => { alert("Не вдалося завантажити урок. Помилка: " + error.message); }).finally(() => { loadingIndicator.style.display = 'none'; generateTopicBtn.disabled = false; generateTopicBtn.textContent = 'Створити новий урок'; topicInput.value = ''; }); });
showTranslationBtn.addEventListener('click', () => { cardBack.style.display = 'block'; showTranslationBtn.style.display = 'none'; nextWordBtn.style.display = 'block'; });
nextWordBtn.addEventListener('click', showNextWord);
startTestBtn.addEventListener('click', startTest);
backToDashboardBtn.addEventListener('click', () => { updateUserTopicsList(); showScreen('dashboard-screen'); });
document.addEventListener('DOMContentLoaded', () => { loadProgress(); updateUserTopicsList(); renderProfile(); showScreen('dashboard-screen'); });